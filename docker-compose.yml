services:
  postgres:
    image: postgres:12.20-alpine3.20
    container_name: area-postgres
    shm_size: 128mb
    restart: unless-stopped
    env_file:
      - .env
    volumes:
      - area-postgres-volume:/var/lib/postgresql/data:rw
    ports:
      - 5432:5432
    networks:
      - area_network

  redis:
    image: redis:alpine3.20
    restart: unless-stopped
    container_name: area-redis
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - area-redis-volume:/data:rw
    networks:
      - area_network
    command: redis-server --save 60 1 --loglevel warning

  server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - postgres
      - redis
    image: area-backend:latest
    container_name: area-backend-api
    env_file:
      - .env
    ports:
      - 8080:${REST_API_PORT}
    volumes:
      - ./crypto/jwe_public_key.pem:${JWE_PUBLIC_KEY}:ro
      - ./crypto/jwe_private_key.pem:${JWE_PRIVATE_KEY}:ro
    networks:
      - area_network

#  client_mobile: # TODO
#    build:
#      context: ./
#      dockerfile: ./mobile/Dockerfile
#    image: area-mobile:latest
#    volumes:
#      - area-client:/usr/app/mobile

  client_web:
    build:
      context: ./
      dockerfile: ./frontend/Dockerfile
    depends_on:
      - server
#      - client_mobile
    image: area-frontend:latest
    environment:
      - PORT=8081
      - API_URL=http://server:${REST_API_PORT}
    env_file:
      - .env
    ports:
      - 8081:8081
#    volumes:
#      - area-client:/usr/app/frontend
    networks:
      - area_network

volumes:
  area-postgres-volume:
  area-redis-volume:
  area-client:

networks:
  area_network:

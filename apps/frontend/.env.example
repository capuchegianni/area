# API URL
# --- The URL at which the frontend service will make requests to the backend (REST API).
# --- In development, simply set both to the same URL. Same when building the
# --- frontend for production from here (apps/frontend).
# --- There are two URLs because when using the docker-compose from the root
# --- directory, and making requests from the frontend server-side, the URL must be
# --- "http://server:<PORT>", where "server" is the name of the backend service in
# --- the docker-compose. When making requests from the frontend client-side,
# --- since it doesn't have access to the docker-compose network, the URL must be
# --- "http://localhost:<PORT>" (or the URL of the server if it's hosted remotely).
# --- You don't need to edit them when using the docker-compose, it uses
# --- "http://server:${REST_API_PORT}' and '${REST_API_URL}' (from the root .env file).
SERVER_API_URL="http://localhost:8080"
CLIENT_API_URL="http://localhost:8080"

# Cypress host
# --- The URL at which the frontend service will run when testing with Cypress.
# --- Often, it will be "http://localhost:8081" since tests mostly run locally.
# --- Make these commands in order to run the tests (an API must be running first):
# --- $> `npm run build`
# --- $> `npm run prod`
# --- $> `npm run cy:run`
# --- Or, to run the tests with the Cypress interface:
# --- $> `npm run cy:open`
# --- If you want to run the tests with the frontend running in development mode:
# --- - Change the port of the following URL to the one you're using in development:
# ---   "http://localhost:8081" -> "http://localhost:5173" (or whatever port you're using).
# --- $> `npm run dev`
# --- $> `npm run cy:run`
# --- Or, to run the tests with the Cypress interface:
# --- $> `npm run cy:open`
CYPRESS_HOST="http://localhost:8081"
